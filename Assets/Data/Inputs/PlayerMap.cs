//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Data/Inputs/PlayerMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace InputController
{
    public partial class @PlayerMap: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerMap()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerMap"",
    ""maps"": [
        {
            ""name"": ""PlayerMove"",
            ""id"": ""0d682cf6-07f6-41c8-a957-ed9763184482"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""cf5692b4-06e8-4ba6-915e-e15d23703da3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Value"",
                    ""id"": ""67b301e3-c4a6-46df-af17-48d3c1a91fba"",
                    ""expectedControlType"": ""Double"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Crouch/Dive"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c1c606a2-3213-4469-adde-8c4cbe185afb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""89c4ec04-c9b0-4d5a-b7ab-8c47e2b11cbd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SurvivalInstinct"",
                    ""type"": ""Button"",
                    ""id"": ""4eb98df3-b085-4ed6-8b2f-cf3b68ecbf66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""e32f4a67-00f6-4e27-ae1c-bfb56bad21a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Poltergeist"",
                    ""type"": ""Button"",
                    ""id"": ""2115b088-960b-4b8a-8e16-7aed2e1ca003"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""50102b15-970c-4576-8c10-5ff407d83b3d"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69e64acd-ac8a-4988-9377-a0de337dbd0e"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""532467b5-ea1b-4380-a88a-9e16dddf461a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2b5b29bc-ff0f-4c4a-b9de-f879c871eaa6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6e6a6b1c-eda3-4d00-87c7-f7f3f5f6f1b9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""46b75aa3-d7e6-4944-a7cd-902e95ff1551"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""40b776e9-a243-4089-a994-c6f738c27039"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""1e6c8a8e-a796-41ad-906a-43d89dd0ebf2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f70c5b38-b047-45d1-8590-130fd92ec2ca"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f1c15ecf-f96e-4e8d-aff0-076ecaeadb3f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9adff0b6-984c-4edb-980c-254a25be2d6e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""52ca4ab6-c26d-4a76-b1c4-6cb543cfbbaa"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6ebbb579-2680-4cbf-8fb0-afe1e5d7a39f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c46af7e3-59b8-4d14-8623-c4ae0d162663"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4b0811a-fc6b-420c-864f-9d10b8a61fd3"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SurvivalInstinct"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""284580a0-73d2-4f57-b8ec-3ae58c9dee4c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SurvivalInstinct"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbe41d19-990f-4fe9-bb8a-e73c8da64282"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SurvivalInstinct"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e36985ba-5f8d-4a09-a9fc-fbca188fb529"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b88ae9d4-332e-4a4b-bc90-c7311318c51a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3f06597-fa77-451b-9004-77a9a67586d2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Crouch/Dive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c67b07c-b099-4fd5-9adc-a518e83d6363"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Crouch/Dive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee287d3d-196b-421b-be6e-d85266952fff"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a1166a8-9531-44ee-9a96-fa55dbc6e1ea"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7054650-9646-4530-9e19-c1d9a3eb34a1"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Poltergeist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84e036cd-fd55-49ca-b946-f195e3680b90"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Poltergeist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Poltergeist"",
            ""id"": ""cf70e77f-04e1-44d2-a169-730f596ac2c1"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""d52655ba-8112-4cc9-8cd8-2f9e21ade626"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select/Deselect"",
                    ""type"": ""Button"",
                    ""id"": ""e2cb03bb-2ccd-4203-99ed-f41ce9c2d052"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""YAxis"",
                    ""type"": ""Value"",
                    ""id"": ""d3b53d64-0c8f-4fa0-9e15-47ecb6cbc911"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""735be263-7b24-4a91-870b-ffc146dbd16f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2db77228-0c47-4244-9ec1-bb192e8de712"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""YAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""69313c76-a558-4b6b-b0fb-2c62dae97351"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""YAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""78da6f9a-ab55-4171-ae03-e0a4a44b0312"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""YAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""c643a695-5620-486f-b49b-d3ff6b6ccd1d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""YAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""58b8daee-cecb-4184-ac50-f4b3d8bf6800"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""YAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""94a161e9-6c48-43fd-8f01-d37d42c1f0fb"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""YAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b4f2c226-4777-45db-94e3-82db67a96cc5"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""331280bd-2ae8-40b4-858d-749ac7685528"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""ff348dd7-21e3-4d4b-9c03-beda1c894477"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""723f749b-5eea-4a14-9700-993839327e7c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""05e7a6f4-c77b-4acd-a0b2-a378852cef8c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ed35319c-0def-4f88-8861-edb015c60170"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9e9621ec-7c0a-4bdc-a36d-5318eb97311d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""fdda7c31-4eb2-40bf-b5e2-dc744f6fe296"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e84552b7-6f08-4c94-a73f-a90842dd8140"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""33a47806-2d23-4aa5-981a-46bdf066a6b1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9ea4c5bc-9a8e-4103-ad44-19ed34cb5978"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""233a4fc4-a899-4e91-9369-54db8fcfa502"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a362142a-30ab-4f35-978b-45ac56e9613f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Select/Deselect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86030c0b-788a-4c9f-b9df-5d71fa844f01"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Select/Deselect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1899a014-7777-404f-b1b7-c307ed9ebf0d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Select/Deselect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11725f52-1975-4212-86a8-e4bd593adfa9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Select/Deselect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""112196bc-edf0-468a-a415-649c5a845f33"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b9205ee-d78c-4738-9d4a-3e595c77bfe5"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Pause"",
            ""id"": ""ecaf7696-a4a9-43da-bc9e-2b59f1db5632"",
            ""actions"": [
                {
                    ""name"": ""Pause/Unpause"",
                    ""type"": ""Button"",
                    ""id"": ""3ffadcf2-c278-4da4-a116-5c5f39f0ee42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f8e488ac-4b42-431d-a4af-5db610d6b454"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Pause/Unpause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd74e6d6-d3d1-4c2b-9fec-719e2ef42c5a"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause/Unpause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // PlayerMove
            m_PlayerMove = asset.FindActionMap("PlayerMove", throwIfNotFound: true);
            m_PlayerMove_Move = m_PlayerMove.FindAction("Move", throwIfNotFound: true);
            m_PlayerMove_Jump = m_PlayerMove.FindAction("Jump", throwIfNotFound: true);
            m_PlayerMove_CrouchDive = m_PlayerMove.FindAction("Crouch/Dive", throwIfNotFound: true);
            m_PlayerMove_Interact = m_PlayerMove.FindAction("Interact", throwIfNotFound: true);
            m_PlayerMove_SurvivalInstinct = m_PlayerMove.FindAction("SurvivalInstinct", throwIfNotFound: true);
            m_PlayerMove_Sprint = m_PlayerMove.FindAction("Sprint", throwIfNotFound: true);
            m_PlayerMove_Poltergeist = m_PlayerMove.FindAction("Poltergeist", throwIfNotFound: true);
            // Poltergeist
            m_Poltergeist = asset.FindActionMap("Poltergeist", throwIfNotFound: true);
            m_Poltergeist_Move = m_Poltergeist.FindAction("Move", throwIfNotFound: true);
            m_Poltergeist_SelectDeselect = m_Poltergeist.FindAction("Select/Deselect", throwIfNotFound: true);
            m_Poltergeist_YAxis = m_Poltergeist.FindAction("YAxis", throwIfNotFound: true);
            m_Poltergeist_Cancel = m_Poltergeist.FindAction("Cancel", throwIfNotFound: true);
            // Pause
            m_Pause = asset.FindActionMap("Pause", throwIfNotFound: true);
            m_Pause_PauseUnpause = m_Pause.FindAction("Pause/Unpause", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // PlayerMove
        private readonly InputActionMap m_PlayerMove;
        private List<IPlayerMoveActions> m_PlayerMoveActionsCallbackInterfaces = new List<IPlayerMoveActions>();
        private readonly InputAction m_PlayerMove_Move;
        private readonly InputAction m_PlayerMove_Jump;
        private readonly InputAction m_PlayerMove_CrouchDive;
        private readonly InputAction m_PlayerMove_Interact;
        private readonly InputAction m_PlayerMove_SurvivalInstinct;
        private readonly InputAction m_PlayerMove_Sprint;
        private readonly InputAction m_PlayerMove_Poltergeist;
        public struct PlayerMoveActions
        {
            private @PlayerMap m_Wrapper;
            public PlayerMoveActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_PlayerMove_Move;
            public InputAction @Jump => m_Wrapper.m_PlayerMove_Jump;
            public InputAction @CrouchDive => m_Wrapper.m_PlayerMove_CrouchDive;
            public InputAction @Interact => m_Wrapper.m_PlayerMove_Interact;
            public InputAction @SurvivalInstinct => m_Wrapper.m_PlayerMove_SurvivalInstinct;
            public InputAction @Sprint => m_Wrapper.m_PlayerMove_Sprint;
            public InputAction @Poltergeist => m_Wrapper.m_PlayerMove_Poltergeist;
            public InputActionMap Get() { return m_Wrapper.m_PlayerMove; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerMoveActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerMoveActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerMoveActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerMoveActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @CrouchDive.started += instance.OnCrouchDive;
                @CrouchDive.performed += instance.OnCrouchDive;
                @CrouchDive.canceled += instance.OnCrouchDive;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @SurvivalInstinct.started += instance.OnSurvivalInstinct;
                @SurvivalInstinct.performed += instance.OnSurvivalInstinct;
                @SurvivalInstinct.canceled += instance.OnSurvivalInstinct;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Poltergeist.started += instance.OnPoltergeist;
                @Poltergeist.performed += instance.OnPoltergeist;
                @Poltergeist.canceled += instance.OnPoltergeist;
            }

            private void UnregisterCallbacks(IPlayerMoveActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @Jump.started -= instance.OnJump;
                @Jump.performed -= instance.OnJump;
                @Jump.canceled -= instance.OnJump;
                @CrouchDive.started -= instance.OnCrouchDive;
                @CrouchDive.performed -= instance.OnCrouchDive;
                @CrouchDive.canceled -= instance.OnCrouchDive;
                @Interact.started -= instance.OnInteract;
                @Interact.performed -= instance.OnInteract;
                @Interact.canceled -= instance.OnInteract;
                @SurvivalInstinct.started -= instance.OnSurvivalInstinct;
                @SurvivalInstinct.performed -= instance.OnSurvivalInstinct;
                @SurvivalInstinct.canceled -= instance.OnSurvivalInstinct;
                @Sprint.started -= instance.OnSprint;
                @Sprint.performed -= instance.OnSprint;
                @Sprint.canceled -= instance.OnSprint;
                @Poltergeist.started -= instance.OnPoltergeist;
                @Poltergeist.performed -= instance.OnPoltergeist;
                @Poltergeist.canceled -= instance.OnPoltergeist;
            }

            public void RemoveCallbacks(IPlayerMoveActions instance)
            {
                if (m_Wrapper.m_PlayerMoveActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerMoveActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerMoveActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerMoveActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerMoveActions @PlayerMove => new PlayerMoveActions(this);

        // Poltergeist
        private readonly InputActionMap m_Poltergeist;
        private List<IPoltergeistActions> m_PoltergeistActionsCallbackInterfaces = new List<IPoltergeistActions>();
        private readonly InputAction m_Poltergeist_Move;
        private readonly InputAction m_Poltergeist_SelectDeselect;
        private readonly InputAction m_Poltergeist_YAxis;
        private readonly InputAction m_Poltergeist_Cancel;
        public struct PoltergeistActions
        {
            private @PlayerMap m_Wrapper;
            public PoltergeistActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Poltergeist_Move;
            public InputAction @SelectDeselect => m_Wrapper.m_Poltergeist_SelectDeselect;
            public InputAction @YAxis => m_Wrapper.m_Poltergeist_YAxis;
            public InputAction @Cancel => m_Wrapper.m_Poltergeist_Cancel;
            public InputActionMap Get() { return m_Wrapper.m_Poltergeist; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PoltergeistActions set) { return set.Get(); }
            public void AddCallbacks(IPoltergeistActions instance)
            {
                if (instance == null || m_Wrapper.m_PoltergeistActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PoltergeistActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @SelectDeselect.started += instance.OnSelectDeselect;
                @SelectDeselect.performed += instance.OnSelectDeselect;
                @SelectDeselect.canceled += instance.OnSelectDeselect;
                @YAxis.started += instance.OnYAxis;
                @YAxis.performed += instance.OnYAxis;
                @YAxis.canceled += instance.OnYAxis;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
            }

            private void UnregisterCallbacks(IPoltergeistActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @SelectDeselect.started -= instance.OnSelectDeselect;
                @SelectDeselect.performed -= instance.OnSelectDeselect;
                @SelectDeselect.canceled -= instance.OnSelectDeselect;
                @YAxis.started -= instance.OnYAxis;
                @YAxis.performed -= instance.OnYAxis;
                @YAxis.canceled -= instance.OnYAxis;
                @Cancel.started -= instance.OnCancel;
                @Cancel.performed -= instance.OnCancel;
                @Cancel.canceled -= instance.OnCancel;
            }

            public void RemoveCallbacks(IPoltergeistActions instance)
            {
                if (m_Wrapper.m_PoltergeistActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPoltergeistActions instance)
            {
                foreach (var item in m_Wrapper.m_PoltergeistActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PoltergeistActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PoltergeistActions @Poltergeist => new PoltergeistActions(this);

        // Pause
        private readonly InputActionMap m_Pause;
        private List<IPauseActions> m_PauseActionsCallbackInterfaces = new List<IPauseActions>();
        private readonly InputAction m_Pause_PauseUnpause;
        public struct PauseActions
        {
            private @PlayerMap m_Wrapper;
            public PauseActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @PauseUnpause => m_Wrapper.m_Pause_PauseUnpause;
            public InputActionMap Get() { return m_Wrapper.m_Pause; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PauseActions set) { return set.Get(); }
            public void AddCallbacks(IPauseActions instance)
            {
                if (instance == null || m_Wrapper.m_PauseActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PauseActionsCallbackInterfaces.Add(instance);
                @PauseUnpause.started += instance.OnPauseUnpause;
                @PauseUnpause.performed += instance.OnPauseUnpause;
                @PauseUnpause.canceled += instance.OnPauseUnpause;
            }

            private void UnregisterCallbacks(IPauseActions instance)
            {
                @PauseUnpause.started -= instance.OnPauseUnpause;
                @PauseUnpause.performed -= instance.OnPauseUnpause;
                @PauseUnpause.canceled -= instance.OnPauseUnpause;
            }

            public void RemoveCallbacks(IPauseActions instance)
            {
                if (m_Wrapper.m_PauseActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPauseActions instance)
            {
                foreach (var item in m_Wrapper.m_PauseActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PauseActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PauseActions @Pause => new PauseActions(this);
        private int m_GamepadSchemeIndex = -1;
        public InputControlScheme GamepadScheme
        {
            get
            {
                if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
                return asset.controlSchemes[m_GamepadSchemeIndex];
            }
        }
        private int m_KeyboardMouseSchemeIndex = -1;
        public InputControlScheme KeyboardMouseScheme
        {
            get
            {
                if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
                return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
            }
        }
        public interface IPlayerMoveActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnCrouchDive(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
            void OnSurvivalInstinct(InputAction.CallbackContext context);
            void OnSprint(InputAction.CallbackContext context);
            void OnPoltergeist(InputAction.CallbackContext context);
        }
        public interface IPoltergeistActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnSelectDeselect(InputAction.CallbackContext context);
            void OnYAxis(InputAction.CallbackContext context);
            void OnCancel(InputAction.CallbackContext context);
        }
        public interface IPauseActions
        {
            void OnPauseUnpause(InputAction.CallbackContext context);
        }
    }
}
